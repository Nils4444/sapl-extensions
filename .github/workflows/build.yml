name: build

on:
  push:
    branches: [main]
  repository_dispatch:
    branches: [main]
  
jobs:
  build:

    runs-on: ubuntu-latest
 
    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
        # avoid shallow clone to ensure correct sonarqube auto assignment
        fetch-depth: 0
        
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Configure servers
      uses: s4u/maven-settings-action@v2.3.0
      with:
        githubServer: false
        servers: |
          [{
              "id": "ossrh", 
              "username": "${{ secrets.OSSRH_USERNAME }}",
              "password": "${{ secrets.OSSRH_PASSWORD }}"
           },{
              "id": "ghcr.io",
              "username": "${{ secrets.GHUB_USERNAME }}", 
              "password": "${{ secrets.GHUB_ACCESS_TOKEN }}"
           },{
              "id": "github", 
              "username": "${{ secrets.GHUB_USERNAME }}",
              "password": "${{ secrets.GHUB_ACCESS_TOKEN }}"
           }]
    
    - name: Cache Maven dependencies
      uses: actions/cache@v2      
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - name: Build with Maven (JUnit, JaCoCo, Sonar) 
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B org.jacoco:jacoco-maven-plugin:prepare-agent install org.jacoco:jacoco-maven-plugin:report sonar:sonar -Dsonar.host.url=https://sonar.ftk.de -Dsonar.login=${SONAR_TOKEN} 

    - name: Install GPG Code Signing Key
      run: |
        cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
        gpg --list-secret-keys --keyid-format LONG

    - name: Deploy Maven artefacts
      run: mvn -B --no-transfer-progress -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} -DskipTests -P publish clean deploy      
      
    - name: Clean up local repository before caching
      run: rm -rf /.m2/repository/io/sapl
